"flowc" - compiler for "gRPC" microservice orchestration

"flowc" shares the tokenizer with the "Protocol Buffers" compiler protoc. 

Strings, number literals (integer and floating point), and commnets are "C" style.
Identifiers must start with a letter, and can contain _ and digits. Aditionally,
boolean literals are availablle as "true" and "false".

The detailed specification of the "Protocol Buffers" version "3" can be found here:
    https://developers.google.com/protocol-buffers/docs/reference/proto3-spec

Details about "gRPC" connectivity can be found here:
    https://grpc.io/grpc/cpp/md_doc_connectivity-semantics-and-api.html

The flow specific statemets are: "node", "container", and "entry". The language reference
below is spcified using 'Extended Backus-Naur Form (EBNF)' with the following notation:

    '|'   for alternative productions
    '()'  grouping
    '[]'  zero or one time 
    '{}'  any number of times

Terminals are "emphasized".

A "node" definition is an abstraction of a gRPC service. If a condition is present, the node is
evaluated only if the condition evaluates to true. The conditions for nodes of the same type are 
evaluated in file order.

"node" identifier '['"("conditional-expression")"']' "{"  
    "output" full_identifier "(" message_mapping ")" ";"
    '{'option_definition'}'
"}"

An "entry" is the implementation of one service method. Its name must match the service.method 
that it implements.

"entry" dotted_identifier "{"
    "return" "(" message_mapping ")" ";"
    '{'option_definition'}'
"}"

Error check statements generate a gRPC error when the condition is evaluated to true. Like node
conditions, error checks are evaluated as soon as the dependencies are satisfied, in file order.

"error" "("conditional-expression")" '['integer-expression","']' string-expression 

"container" is used to define any auxiliary "non-gRPC" service that is needed by the system. 
The syntax is identical to the "node" except that no "output" statement is allowed.

dotted_identifier = identifier'{'"."identifier'}'
identifier = [A-Za-z] '{' [A-Za-z] '|' [0-9] '|' "_" '}'

Node Level Properties:

"image"           String with the "Docker" image name and tag
"environment"     Name-value map with the envitonment variables to be set when the image is run. 
                The values must be strings. 
"id"              Label for this node.
"group"           Label to be used as a deployment name in the "Kubernetes" configuration. 
                Nodes in same group will run together in the same pod container.
"limits"          Name-value map with settings that will be used as resource limits in the "Kubernetes" 
                deployment. The values must be strings and will be copied verbatim into the yaml file.
"init"            Stanza to be added to the "initContainers" section of the "Kubernetes" deployment
"replicas"        Number of overlapped calls that can be made to this service.
"timeout"         Timeout for calling this node. By default no timeout is set.
"mount"           Volume mount for this image.
"header"          Header to be added to the grpc call.
"endpoint"        grpc endpoint to use for an un-managed service.
