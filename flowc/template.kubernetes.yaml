apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{NAME/id/option/lower}}
  labels:
    app: {{NAME/id/option/lower}}
    flow-group: {{NAME/id/option/lower}}
spec:
  replicas: ${replicas_{{NAME/id/upper}}}
  selector:
    matchLabels:
      app: {{NAME/id/option/lower}}
  template:
    metadata:
      labels:
        app: {{NAME/id/option/lower}}
        flow-group: {{NAME/id/option/lower}}
    spec:
{X:HAVE_IMAGE_PULL_SECRETS{
      imagePullSecrets:{{HAVE_IMAGE_PULL_SECRETS}}}X}
{S:IMAGE_PULL_SECRET{
      - name: "{{IMAGE_PULL_SECRET}}"
}S}
{X:HAVE_INIT_CONTAINERS{
      initContainers:{{HAVE_INIT_CONTAINERS}}}X}
{I:INIT_CONTAINER{
      - {{INIT_CONTAINER}}
}I}
{W:VOLUME_NAME{
${{{VOLUME_NAME/id/upper}}_COS}      - command: ["/bin/sh", "-c", "/usr/local/bin/rr-get.sh '${{{VOLUME_NAME/id/upper}}}' -d /etc/cos-access -u -o /to-1"]
${{{VOLUME_NAME/id/upper}}_PVC}      - command: ["/bin/sh", "-c", "rsync -vrtlog /from-1/. /to-1"] 
        image:  "{{PUSH_REPO-}}{{IMAGE}}" 
        securityContext: {privileged: true, runAsUser: 0} 
        name: volumes-init-{{VOLUME_NAME/option}}
        volumeMounts:
${{{VOLUME_NAME/id/upper}}_PVC}        - name: {{VOLUME_NAME/option}}
${{{VOLUME_NAME/id/upper}}_PVC}          mountPath: "/from-1"
${{{VOLUME_NAME/id/upper}}_PVC}          readOnly: true
${{{VOLUME_NAME/id/upper}}_COS}        - name: cos-access-{{VOLUME_NAME/option}}
${{{VOLUME_NAME/id/upper}}_COS}          mountPath: "/etc/cos-access"
${{{VOLUME_NAME/id/upper}}_COS}          readOnly: true

        - name: scratch-{{VOLUME_NAME/option}}
          mountPath: "/to-1"
          readOnly: false
}W}
      containers:
      - name: {{NAME}}
        image: "{{PUSH_REPO-}}{{IMAGE}}"
        command: ["/home/worker/{{NAME}}/{{NAME}}-server"]
        args: ["{{MAIN_PORT}}"]
        ports:
          - name: grpc
            containerPort: {{MAIN_PORT}}
          - name: rest
            containerPort: {{REST_PORT}}
        env:
          - name: {{NAME/id/upper}}_REST_LISTENING_PORTS
            value: "{{REST_PORT}}"
{N:NODE_NAME{{E?NODE_ENDPOINT{
          - name: {{NAME/id/upper}}_NODE_{{NODE_NAME/id/upper}}_ENDPOINT
            value: "{{NODE_ENDPOINT}}"
}E}}N}
{N:NODE_NAME{{E?NODE_IMAGE&NODE_GRPC{
          - name: {{NAME/id/upper}}_NODE_{{NODE_NAME/id/upper}}_ENDPOINT
            value: "$ehr_{{NAME/id/upper}}_{{NODE_NAME/id/upper}}:{{NODE_PORT}}"
}E}}N}
{D:DEFN{
          - name: {{NAME/id/upper}}_FD_{{DEFN/id/upper}}
            value: "$fd_{{NAME/id/upper}}_FD_{{DEFN/id/upper}}"
}D}
$enable_custom_app        volumeMounts:
$enable_custom_app$htdocs_PVC        - name: {{HTDOCS_VOLUME_NAME}}
$enable_custom_app$htdocs_COS        - name: scratch-{{HTDOCS_VOLUME_NAME}}
$enable_custom_app          mountPath: "/home/worker/pr/htdocs"
$enable_custom_app          readOnly: true

{N:G_NODE_NAME{{I?G_NODE_IMAGE{
      - name: {{G_NODE_NAME/id/option}}
        image: "$image_{{G_NODE_NAME/id/upper}}"
        {{G_NODE_ENVIRONMENT}}
        {{G_NODE_MOUNTS}}
{{G_NODE_HAVE_MIN_MAX}}        resources:
{{G_NODE_HAVE_MIN}}          requests:
{{G_NODE_HAVE_MIN_MEMORY}}            memory: "{{G_NODE_MIN_MEMORY}}"
{{G_NODE_HAVE_MIN_CPUS}}            cpu: "{{G_NODE_MIN_CPUS}}"
{{G_NODE_HAVE_MIN_GPUS}}            nvidia.com/gpu: "{{G_NODE_MIN_GPUS}}"
{{G_NODE_HAVE_MAX}}          limits:
{{G_NODE_HAVE_MAX_MEMORY}}            memory: "{{G_NODE_MAX_MEMORY}}"
{{G_NODE_HAVE_MAX_CPUS}}            cpu: "{{G_NODE_MAX_CPUS}}"
{{G_NODE_HAVE_MAX_GPUS}}            nvidia.com/gpu: "{{G_NODE_MAX_GPUS}}"
}I}
}N}

$enable_main_pod_volumes      volumes:
$enable_custom_app$htdocs_PVC        - name: {{HTDOCS_VOLUME_NAME}}    
$enable_custom_app$htdocs_PVC          persistentVolumeClaim:
$enable_custom_app$htdocs_PVC            claimName: ${{{NAME/id/upper}}_HTDOCS}
$enable_custom_app$htdocs_COS        - name: cos-access-{{HTDOCS_VOLUME_NAME}}
$enable_custom_app$htdocs_COS          secret:
$enable_custom_app$htdocs_COS            secretName: ${{{NAME/id/upper}}_HTDOCS_SECRET_NAME}
$enable_custom_app$htdocs_COS        - name: scratch-{{HTDOCS_VOLUME_NAME}}
$enable_custom_app$htdocs_COS          emptyDir: {}

{W:VOLUME_NAME{
${{{VOLUME_NAME/id/upper}}_PVC}        - name: {{VOLUME_NAME/option}}
${{{VOLUME_NAME/id/upper}}_PVC}          persistentVolumeClaim:
${{{VOLUME_NAME/id/upper}}_PVC}            claimName: ${{{VOLUME_NAME/id/upper}}}
${{{VOLUME_NAME/id/upper}}_COS}        - name: cos-access-{{VOLUME_NAME/option}}
${{{VOLUME_NAME/id/upper}}_COS}          secret:
${{{VOLUME_NAME/id/upper}}_COS}            secretName: ${{{VOLUME_NAME/id/upper}}_SECRET_NAME}
${{{VOLUME_NAME/id/upper}}_COS}        - name: scratch-{{VOLUME_NAME/option}}
${{{VOLUME_NAME/id/upper}}_COS}          emptyDir: {}
}W}

---
apiVersion: v1
kind: Service
metadata:
  name: {{NAME/id/option/lower}}
  labels:
    flow-group: {{NAME/id/option/lower}}
    app: {{NAME/id/option/lower}}
spec:
  ports:
  - port: {{MAIN_PORT}}
    protocol: TCP
    name: grpc
  - port:  {{REST_PORT}}
    protocol: TCP
    name: http
  selector:
    app: {{NAME/id/option/lower}}
