---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{NAME/id/option/lower}}-{{G_NODE_GROUP/id/option/lower}}
  labels:
    app: {{NAME/id/option/lower}}-{{G_NODE_GROUP/id/option/lower}}
    flow-group: {{NAME/id/option/lower}}
spec:
  replicas: ${replicas_{{NAME/id/upper}}_GROUP_{{G_NODE_GROUP/id/upper}}}
  selector:
    matchLabels:
      app: {{NAME/id/option/lower}}-{{G_NODE_GROUP/id/option/lower}}
  template:
    metadata:
      labels:
        app: {{NAME/id/option/lower}}-{{G_NODE_GROUP/id/option/lower}}
        flow-group: {{NAME/id/option/lower}}
    spec:
{X?IMAGE_PULL_SECRET{
      imagePullSecrets:
{S:IMAGE_PULL_SECRET{
      - name: "{{IMAGE_PULL_SECRET}}"
}S}
}X}
{X?G_INIT_COUNT|G_VOLUME_COUNT{
      initContainers:}X}
{J?G_INIT_COUNT{
{I:G_INIT_CONTAINER{
      - {{G_INIT_CONTAINER}}
}I}
}J}
{J?G_VOLUME_COUNT{
{W:G_VOLUME_NAME{
${{{G_VOLUME_NAME/id/upper}}_COS}      - command: ["/bin/sh", "-c", "/usr/local/bin/rr-get.sh '${{{G_VOLUME_NAME/id/upper}}_URL}' -d /etc/cos-access -u -o /to-1"]
${{{G_VOLUME_NAME/id/upper}}_PVC}      - command: ["/bin/sh", "-c", "rsync -vrtlog /from-1/. /to-1"] 
        image:  "{{PUSH_REPO-}}{{IMAGE}}" 
        securityContext: {privileged: true, runAsUser: 0} 
        name: volumes-init-{{G_VOLUME_NAME/option}}
        volumeMounts:
${{{G_VOLUME_NAME/id/upper}}_PVC}        - name: {{G_VOLUME_NAME/option}}
${{{G_VOLUME_NAME/id/upper}}_PVC}          mountPath: "/from-1"
${{{G_VOLUME_NAME/id/upper}}_PVC}          readOnly: true
${{{G_VOLUME_NAME/id/upper}}_COS}        - name: cos-access-{{G_VOLUME_NAME/option}}
${{{G_VOLUME_NAME/id/upper}}_COS}          mountPath: "/etc/cos-access"
${{{G_VOLUME_NAME/id/upper}}_COS}          readOnly: true

        - name: scratch-{{G_VOLUME_NAME/option}}
          mountPath: "/to-1"
          readOnly: false
}W}
}J}
      containers:
{N:G_NODE_NAME{{I?G_NODE_IMAGE{
      - name: {{G_NODE_NAME/id/option}}
        image: "$image_{{G_NODE_NAME/id/upper}}"
        {{G_NODE_ENVIRONMENT}}
        {{G_NODE_MOUNTS}}
{{G_NODE_HAVE_MIN_MAX}}        resources:
{{G_NODE_HAVE_MIN}}          requests:
{{G_NODE_HAVE_MIN_MEMORY}}            memory: "{{G_NODE_MIN_MEMORY}}"
{{G_NODE_HAVE_MIN_CPUS}}            cpu: "{{G_NODE_MIN_CPUS}}"
{{G_NODE_HAVE_MIN_GPUS}}            nvidia.com/gpu: "{{G_NODE_MIN_GPUS}}"
{{G_NODE_HAVE_MAX}}          limits:
{{G_NODE_HAVE_MAX_MEMORY}}            memory: "{{G_NODE_MAX_MEMORY}}"
{{G_NODE_HAVE_MAX_CPUS}}            cpu: "{{G_NODE_MAX_CPUS}}"
{{G_NODE_HAVE_MAX_GPUS}}            nvidia.com/gpu: "{{G_NODE_MAX_GPUS}}"
}I}
}N}
{V?G_VOLUME_COUNT{
      volumes:
{W:G_VOLUME_NAME{
${{{G_VOLUME_NAME/id/upper}}_PVC}        - name: {{G_VOLUME_NAME/option}}
${{{G_VOLUME_NAME/id/upper}}_PVC}          persistentVolumeClaim:
${{{G_VOLUME_NAME/id/upper}}_PVC}            claimName: ${{{G_VOLUME_NAME/id/upper}}}
${{{G_VOLUME_NAME/id/upper}}_COS}        - name: cos-access-{{G_VOLUME_NAME/option}}
${{{G_VOLUME_NAME/id/upper}}_COS}          secret:
${{{G_VOLUME_NAME/id/upper}}_COS}            secretName: ${{{G_VOLUME_NAME/id/upper}}_SECRET_NAME}
        - name: scratch-{{G_VOLUME_NAME/option}}
          emptyDir: {}
}W}
}V}
---
apiVersion: v1
kind: Service
metadata:
  name: {{NAME/id/option/lower}}-{{G_NODE_GROUP/id/option/lower}}
  labels:
    app: {{NAME/id/option/lower}}-{{G_NODE_GROUP/id/option/lower}}
    flow-group: {{NAME/id/option/lower}}
spec:
  ports:
{N:G_NODE_NAME{{I?G_NODE_IMAGE{
  - port: {{G_NODE_PORT}}
    protocol: TCP
    name: {{G_NODE_NAME/id/option/lower}}-port
}I}}N}
  selector:
    app: {{NAME/id/option/lower}}-{{G_NODE_GROUP/id/option/lower}}
